"use strict";var scrollPosition,goUpBtn=document.querySelector(".go-up"),checkScrollPosition=function(){scrollPosition=window.scrollY},scrollPositionInterval=setInterval(checkScrollPosition,1e3);document.addEventListener("scroll",function(){var o=window.scrollY;scrollPosition<o?goUpBtn.classList.add("active"):goUpBtn.classList.remove("active")}),goUpBtn.addEventListener("click",function(){window.scrollTo({top:0,left:0,behavior:"smooth"})});
//# sourceMappingURL=data:application/json;charset=utf8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbImFwcC5qcyJdLCJuYW1lcyI6WyJzY3JvbGxQb3NpdGlvbiIsImNoZWNrU2Nyb2xsUG9zaXRpb24iLCJxdWVyeVNlbGVjdG9yIiwic2Nyb2xsUG9zaXRpb25JbnRlcnZhbCIsInNjcm9sbFkiLCJzZXRJbnRlcnZhbCIsImdvVXBCdG4iLCJuZXdTY3JvbGxQb3NpdGlvbiIsIndpbmRvdyIsInJlbW92ZSIsImNsYXNzTGlzdCIsImFkZCIsImFkZEV2ZW50TGlzdGVuZXIiLCJiZWhhdmlvciIsInNjcm9sbFRvIiwidG9wIiwibGVmdCJdLCJtYXBwaW5ncyI6ImFBd0NBLElBQ0VBLGVBRElDLFFBQUFBLFNBQW1CQyxjQUFuQkQsVUFBQUEsb0JBQXNCLFdBSTVCRCxlQUFNRyxPQUFzQkMsU0FBdEJELHVCQUF5QkUsWUFBWUosb0JBQXFCLEtBSzVESyxTQUFBQSxpQkFBc0IsU0FBdEIsV0FDRCxJQUZEQyxFQUVPQyxPQUFBSixRQUNMRSxlQUFrQkcsRUFDbkJILFFBQUFJLFVBQUFDLElBQUEsVUFHSEwsUUFBUU0sVUFBQUEsT0FBaUIsWUFJckJDLFFBQUFBLGlCQUFVLFFBQUEsV0FISUwsT0FBaEJNLFNBQUEsQ0FPRkMsSUFBQSxFQUNBQyxLQUFBLEVBQ0FILFNBQUEiLCJmaWxlIjoiYXBwLm1pbi5qcyIsInNvdXJjZXNDb250ZW50IjpbIlxyXG5cclxuLy8gLy8gTkFWSUdBVElPTlxyXG4vLyAvLyBWYXJpYWJsZXNcclxuLy8gY29uc3QgbmF2aWdhdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2aWdhdGlvbl9fbWVudS13cmFwcGVyXCIpO1xyXG4vLyBjb25zdCBuYXZXcmFwcGVyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZpZ2F0aW9uX193cmFwcGVyXCIpO1xyXG4vLyBjb25zdCBuYXZJdGVtcyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIubmF2aWdhdGlvbl9fbWVudS1pdGVtXCIpO1xyXG4vLyBjb25zdCBzZWN0aW9ucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIjaG9tZSBzZWN0aW9uXCIpO1xyXG4vLyBjb25zdCBuYXZCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdmlnYXRpb25fX2J0blwiKTtcclxuLy8gY29uc3QgYnV0dG9uTGluZTEgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdmlnYXRpb25fX2J0bi1saW5lLS1vbmVcIik7XHJcbi8vIGNvbnN0IGJ1dHRvbkxpbmUyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZpZ2F0aW9uX19idG4tbGluZS0tdHdvXCIpO1xyXG4vLyBjb25zdCBidXR0b25MaW5lMyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIubmF2aWdhdGlvbl9fYnRuLWxpbmUtLXRocmVlXCIpO1xyXG4vLyBjb25zdCBtZW51TmF2ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNob21lXCIpO1xyXG4vLyBjb25zdCBuYXZMb2dvID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5uYXZpZ2F0aW9uX19saW5rXCIpO1xyXG4vLyBjb25zdCBmb290ZXJDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5jb250YWN0XCIpO1xyXG4vLyBjb25zdCBkZXNjcmlwdGlvbldyYXBwZXIgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFxyXG4vLyAgIFwiLmFib3V0X19kZXNjcmlwdGlvbi13cmFwcGVyXCJcclxuLy8gKTtcclxuLy8gY29uc3QgbmF2aWdhdGlvbkNvbnRlbnQgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLm5hdmlnYXRpb25cIik7XHJcbi8vIGNvbnN0IHBob3RvV3JhcHBlciA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuYWJvdXRfX3Bob3RvLXdyYXBwZXJcIik7XHJcbi8vIGNvbnN0IG9wZW5QcmljZUJ0bnMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnByaWNlLWxpc3RfX3JldmVhbFwiKTtcclxuLy8gY29uc3QgaGlkZVByaWNlQnRucyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIucHJpY2UtbGlzdF9faGlkZVwiKTtcclxuLy8gY29uc3QgY2FyZHNDb250YWluZXJzID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5wcmljZS1saXN0X19jb250YWluZXJcIik7XHJcbi8vIGNvbnN0IHByaWNlU2VjdGlvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIjcHJpY2VzXCIpO1xyXG4vLyBjb25zdCBnYWxsZXJ5ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIiNnYWxsZXJ5XCIpO1xyXG4vLyBjb25zdCBtYWluQ29udGVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCJtYWluXCIpO1xyXG4vLyBjb25zdCBoZWFkZXJDb250ZW50ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcImhlYWRlclwiKTtcclxuLy8gY29uc3QgcmlnaHRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdhbGxlcnlfX3JpZ2h0LWljb25cIik7XHJcbi8vIGNvbnN0IGxlZnRCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdhbGxlcnlfX2xlZnQtaWNvblwiKTtcclxuLy8gY29uc3Qgc3dpcGVJbWFnZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuc2Fsb24tZ2FsbGVyeV9faW1hZ2VcIik7XHJcbi8vIGNvbnN0IHN3aXBlU2xpZGVzID0gWy4uLmRvY3VtZW50LnF1ZXJ5U2VsZWN0b3JBbGwoXCIuc2Fsb24tZ2FsbGVyeV9fc2xpZGVcIildO1xyXG5cclxuXHJcbi8vIGNvbnN0IHRpbWUgPSAzMDAwO1xyXG4vLyBsZXQgYWN0aXZlID0gMDtcclxuXHJcbi8vIFNob3dpbmcgZ28tdXAgYnV0dG9uXHJcbmNvbnN0IGdvVXBCdG4gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmdvLXVwXCIpO1xyXG5sZXQgc2Nyb2xsUG9zaXRpb247XHJcblxyXG5jb25zdCBjaGVja1Njcm9sbFBvc2l0aW9uID0gKCkgPT4ge1xyXG4gIHNjcm9sbFBvc2l0aW9uID0gd2luZG93LnNjcm9sbFk7XHJcbn07XHJcblxyXG5jb25zdCBzY3JvbGxQb3NpdGlvbkludGVydmFsID0gc2V0SW50ZXJ2YWwoY2hlY2tTY3JvbGxQb3NpdGlvbiwgMTAwMCk7XHJcblxyXG5kb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwic2Nyb2xsXCIsIGZ1bmN0aW9uICgpIHtcclxuICBsZXQgbmV3U2Nyb2xsUG9zaXRpb24gPSB3aW5kb3cuc2Nyb2xsWTtcclxuICBpZiAoc2Nyb2xsUG9zaXRpb24gPCBuZXdTY3JvbGxQb3NpdGlvbikge1xyXG4gICAgZ29VcEJ0bi5jbGFzc0xpc3QuYWRkKFwiYWN0aXZlXCIpO1xyXG4gIH0gZWxzZSB7XHJcbiAgICBnb1VwQnRuLmNsYXNzTGlzdC5yZW1vdmUoXCJhY3RpdmVcIik7XHJcbiAgfVxyXG59KTtcclxuXHJcbmdvVXBCdG4uYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIGZ1bmN0aW9uICgpIHtcclxuICB3aW5kb3cuc2Nyb2xsVG8oe1xyXG4gICAgdG9wOiAwLFxyXG4gICAgbGVmdDogMCxcclxuICAgIGJlaGF2aW9yOiBcInNtb290aFwiLFxyXG4gIH0pO1xyXG59KTtcclxuXHJcbi8vIC8vQUJPVVRcclxuLy8gLy9UZXh0XHJcbi8vIGNvbnN0IG9wdGlvbnNBYm91dFRleHQgPSB7XHJcbi8vICAgcm9vdE1hcmdpbjogXCIwcHggMHB4IDBweCAwcHhcIixcclxuLy8gICB0cmVzaG9sZDogMSxcclxuLy8gfTtcclxuXHJcbi8vIGxldCBjYWxsYmFjayA9IChlbnRyaWVzLCBhYm91dFRleHRPYnNlcnZlcikgPT4ge1xyXG4vLyAgIGVudHJpZXMuZm9yRWFjaCgoZW50cnkpID0+IHtcclxuLy8gICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykge1xyXG4vLyAgICAgICBjb25zdCBhYm91dFRleHQgPSBlbnRyeS50YXJnZXQucGFyZW50RWxlbWVudDtcclxuLy8gICAgICAgZ3NhcC5mcm9tVG8oXHJcbi8vICAgICAgICAgYWJvdXRUZXh0LFxyXG4vLyAgICAgICAgIHsgeDogXCItMTUwJVwiIH0sXHJcbi8vICAgICAgICAge1xyXG4vLyAgICAgICAgICAgb3BhY2l0eTogMSxcclxuLy8gICAgICAgICAgIHg6IFwiMCVcIixcclxuLy8gICAgICAgICAgIGR1cmF0aW9uOiAxLjUsXHJcbi8vICAgICAgICAgfVxyXG4vLyAgICAgICApO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XHJcbi8vICAgICAgIGFib3V0VGV4dE9ic2VydmVyLnVub2JzZXJ2ZShlbnRyeS50YXJnZXQpO1xyXG4vLyAgICAgfVxyXG4vLyAgIH0pO1xyXG4vLyB9O1xyXG5cclxuLy8gbGV0IGFib3V0VGV4dE9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKGNhbGxiYWNrLCBvcHRpb25zQWJvdXRUZXh0KTtcclxuLy8gbGV0IHRhcmdldEFib3V0ID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvckFsbChcIi5hYm91dF9fZGVzY3JpcHRpb25cIik7XHJcbi8vIGFib3V0VGV4dE9ic2VydmVyLm9ic2VydmUodGFyZ2V0QWJvdXRbMF0pO1xyXG5cclxuLy8gLy9QaG90b1xyXG4vLyBjb25zdCBvcHRpb25zQWJvdXRQaG90byA9IHtcclxuLy8gICByb290TWFyZ2luOiBcIjBweCAwcHggMHB4IDBweFwiLFxyXG4vLyAgIHRyZXNob2xkOiAxLFxyXG4vLyB9O1xyXG5cclxuLy8gbGV0IGNhbGxiYWNrUGhvdG8gPSAoZW50cmllcywgYWJvdXRQaG90b09ic2VydmVyKSA9PiB7XHJcbi8vICAgZW50cmllcy5mb3JFYWNoKChlbnRyeSkgPT4ge1xyXG4vLyAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XHJcbi8vICAgICAgIGdzYXAuZnJvbVRvKFxyXG4vLyAgICAgICAgIGVudHJ5LnRhcmdldCxcclxuLy8gICAgICAgICB7IHg6IFwiMTUwJVwiIH0sXHJcbi8vICAgICAgICAgeyBvcGFjaXR5OiAxLCB4OiBcIjAlXCIsIGR1cmF0aW9uOiAxLjUgfVxyXG4vLyAgICAgICApO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaWYgKGVudHJ5LmlzSW50ZXJzZWN0aW5nKSB7XHJcbi8vICAgICAgIGFib3V0UGhvdG9PYnNlcnZlci51bm9ic2VydmUoZW50cnkudGFyZ2V0KTtcclxuLy8gICAgIH1cclxuLy8gICB9KTtcclxuLy8gfTtcclxuXHJcbi8vIGxldCBhYm91dFBob3RvT2JzZXJ2ZXIgPSBuZXcgSW50ZXJzZWN0aW9uT2JzZXJ2ZXIoXHJcbi8vICAgY2FsbGJhY2tQaG90byxcclxuLy8gICBvcHRpb25zQWJvdXRQaG90b1xyXG4vLyApO1xyXG5cclxuLy8gbGV0IHRhcmdldEFib3V0UGhvdG8gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLmFib3V0X19waG90by13cmFwcGVyXCIpO1xyXG4vLyBhYm91dFBob3RvT2JzZXJ2ZXIub2JzZXJ2ZSh0YXJnZXRBYm91dFBob3RvKTtcclxuXHJcbi8vIGdzYXAuZnJvbVRvKFxyXG4vLyAgIFwiLnByaWNlLWxpc3RfX2NhcmQtLXdvbWFuXCIsXHJcbi8vICAgeyB5OiBcIjUwJVwiLCBvcGFjaXR5OiAwIH0sXHJcbi8vICAge1xyXG4vLyAgICAgeTogXCIwJVwiLFxyXG4vLyAgICAgb3BhY2l0eTogMSxcclxuLy8gICAgIGR1cmF0aW9uOiAxLFxyXG4vLyAgICAgc2Nyb2xsVHJpZ2dlcjoge1xyXG4vLyAgICAgICB0cmlnZ2VyOiBcIi5wcmljZS1saXN0X19jYXJkLS13b21hblwiLFxyXG4vLyAgICAgICBzdGFydDogXCItNTAlIGJvdHRvbVwiLFxyXG4vLyAgICAgfSxcclxuLy8gICB9XHJcbi8vICk7XHJcblxyXG4vLyBnc2FwLmZyb21UbyhcclxuLy8gICBcIi5wcmljZS1saXN0X19jYXJkLS1tYW5cIixcclxuLy8gICB7IHk6IFwiNTAlXCIsIG9wYWNpdHk6IDAgfSxcclxuLy8gICB7XHJcbi8vICAgICB5OiBcIjAlXCIsXHJcbi8vICAgICBvcGFjaXR5OiAxLFxyXG4vLyAgICAgZHVyYXRpb246IDEsXHJcbi8vICAgICBzY3JvbGxUcmlnZ2VyOiB7XHJcbi8vICAgICAgIHRyaWdnZXI6IFwiLnByaWNlLWxpc3RfX2NhcmQtLW1hblwiLFxyXG4vLyAgICAgICBzdGFydDogXCItMjAlIGJvdHRvbVwiLFxyXG4vLyAgICAgfSxcclxuLy8gICB9XHJcbi8vICk7XHJcblxyXG4vLyBnc2FwLmZyb21UbyhcclxuLy8gICBcIi5wcmljZS1saXN0X19jYXJkLS1jaGlsZHJlblwiLFxyXG4vLyAgIHsgeTogXCI1MCVcIiwgb3BhY2l0eTogMCB9LFxyXG4vLyAgIHtcclxuLy8gICAgIHk6IFwiMCVcIixcclxuLy8gICAgIG9wYWNpdHk6IDEsXHJcbi8vICAgICBkdXJhdGlvbjogMSxcclxuLy8gICAgIHNjcm9sbFRyaWdnZXI6IHtcclxuLy8gICAgICAgdHJpZ2dlcjogXCIucHJpY2UtbGlzdF9fY2FyZC0tY2hpbGRyZW5cIixcclxuLy8gICAgICAgc3RhcnQ6IFwiLTIwJSBib3R0b21cIixcclxuLy8gICAgIH0sXHJcbi8vICAgfVxyXG4vLyApO1xyXG5cclxuLy8gLy9HQUxMRVJZXHJcbi8vIGNvbnN0IG9wdGlvbnNHYWxsZXJ5ID0ge1xyXG4vLyAgIHJvb3RNYXJnaW46IFwiMHB4XCIsXHJcbi8vICAgdHJlc2hvbGQ6IDAsXHJcbi8vIH07XHJcblxyXG4vLyBsZXQgZ2FsbGVyeU9ic2VydmVyID0gbmV3IEludGVyc2VjdGlvbk9ic2VydmVyKChlbGVtZW50cykgPT4ge1xyXG4vLyAgIGVsZW1lbnRzLmZvckVhY2goKGVsZW1lbnQpID0+IHtcclxuLy8gICAgIGlmIChlbGVtZW50LmlzSW50ZXJzZWN0aW5nKSB7XHJcbi8vICAgICAgIGxldCBlbGVtZW50Q2hpbGRyZW5zID0gZWxlbWVudC50YXJnZXQucXVlcnlTZWxlY3RvckFsbChcImltZ1wiKTtcclxuLy8gICAgICAgZWxlbWVudENoaWxkcmVucy5mb3JFYWNoKChpbWcpID0+IHtcclxuLy8gICAgICAgICBsZXQgaW1nRGF0YSA9IGltZy5nZXRBdHRyaWJ1dGUoXCJkYXRhLXNyY1wiKTtcclxuLy8gICAgICAgICBpbWcuc3JjID0gaW1nRGF0YTtcclxuLy8gICAgICAgICBnc2FwLnRvKGltZywge1xyXG4vLyAgICAgICAgICAgZHVyYXRpb246IDEuNSxcclxuLy8gICAgICAgICAgIGNsaXBQYXRoOiBcImNpcmNsZSgxNTAlIGF0IDEwJSAxMCUpXCIsXHJcbi8vICAgICAgICAgfSk7XHJcbi8vICAgICAgIH0pO1xyXG4vLyAgICAgfVxyXG4vLyAgICAgaWYgKGVsZW1lbnQuaXNJbnRlcnNlY3RpbmcpIHtcclxuLy8gICAgICAgZ2FsbGVyeU9ic2VydmVyLnVub2JzZXJ2ZShlbGVtZW50LnRhcmdldCk7XHJcbi8vICAgICB9XHJcbi8vICAgfSk7XHJcbi8vIH0sIG9wdGlvbnNHYWxsZXJ5KTtcclxuXHJcbi8vIGNvbnN0IHRhcmdldHMgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yQWxsKFwiLnN3aXBlci13cmFwcGVyXCIpO1xyXG4vLyB0YXJnZXRzLmZvckVhY2goKHRhcmdldCkgPT4ge1xyXG4vLyAgIGdhbGxlcnlPYnNlcnZlci5vYnNlcnZlKHRhcmdldCk7XHJcbi8vIH0pO1xyXG5cclxuLy8gdmFyIHN3aXBlciA9IG5ldyBTd2lwZXIoXCIubXlTd2lwZXJcIiwge1xyXG4vLyAgIGJyZWFrcG9pbnRzOiB7XHJcbi8vICAgICA2NDA6IHtcclxuLy8gICAgICAgc2xpZGVzUGVyVmlldzogMixcclxuLy8gICAgICAgc3BhY2VCZXR3ZWVuOiAyMCxcclxuLy8gICAgIH0sXHJcbi8vICAgICAxMTAwOiB7XHJcbi8vICAgICAgIHNsaWRlc1BlclZpZXc6IDMsXHJcbi8vICAgICAgIHNwYWNlQmV0d2VlbjogNTAsXHJcbi8vICAgICB9LFxyXG4vLyAgICAgMTYwMDoge1xyXG4vLyAgICAgICBzbGlkZXNQZXJWaWV3OiA0LFxyXG4vLyAgICAgICBzcGFjZUJldHdlZW46IDUwLFxyXG4vLyAgICAgfSxcclxuLy8gICAgIDIwMDA6IHtcclxuLy8gICAgICAgc2xpZGVzUGVyVmlldzogNSxcclxuLy8gICAgICAgc3BhY2VCZXR3ZWVuOiA1MCxcclxuLy8gICAgIH0sXHJcbi8vICAgfSxcclxuLy8gICBzbGlkZXNQZXJWaWV3OiAxLFxyXG4vLyAgIHNwYWNlQmV0d2VlbjogMzAsXHJcbi8vICAgc2xpZGVzUGVyR3JvdXA6IDEsXHJcbi8vICAgbG9vcDogZmFsc2UsXHJcbi8vICAgbG9vcEZpbGxHcm91cFdpdGhCbGFuazogdHJ1ZSxcclxuLy8gICBrZXlib2FyZDoge1xyXG4vLyAgICAgZW5hYmxlZDogdHJ1ZSxcclxuLy8gICAgIG9ubHlJblZpZXdwb3J0OiBmYWxzZSxcclxuLy8gICB9LFxyXG4vLyAgIHBhZ2luYXRpb246IHtcclxuLy8gICAgIGVsOiBcIi5zd2lwZXItcGFnaW5hdGlvblwiLFxyXG4vLyAgICAgY2xpY2thYmxlOiB0cnVlLFxyXG4vLyAgIH0sXHJcbi8vIH0pO1xyXG5cclxuLy8gb3BlblByaWNlQnRucy5mb3JFYWNoKChidG4sIGluZGV4KSA9PiB7XHJcbi8vICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbi8vICAgICBnc2FwLmZyb21UbyhcclxuLy8gICAgICAgY2FyZHNDb250YWluZXJzW2luZGV4XSxcclxuLy8gICAgICAgMSxcclxuLy8gICAgICAgeyBkaXNwbGF5OiBcIm5vbmVcIiB9LFxyXG4vLyAgICAgICB7IGRpc3BsYXk6IFwiZmxleFwiIH1cclxuLy8gICAgICk7XHJcbi8vICAgICBjb25zdCBjYXJkcyA9IGNhcmRzQ29udGFpbmVyc1tpbmRleF0ucXVlcnlTZWxlY3RvckFsbChcIi5wcmljZS1saXN0X19ib2R5XCIpO1xyXG4vLyAgICAgZ3NhcC5mcm9tVG8oY2FyZHMsIHsgb3BhY2l0eTogMCB9LCB7IG9wYWNpdHk6IDEsIGR1cmF0aW9uOiAyIH0pO1xyXG4vLyAgICAgb3BlblByaWNlQnRuc1tpbmRleF0uc3R5bGUuZGlzcGxheSA9IFwibm9uZVwiO1xyXG4vLyAgICAgaGlkZVByaWNlQnRuc1tpbmRleF0uc3R5bGUuZGlzcGxheSA9IFwiZmxleFwiO1xyXG4vLyAgIH0pO1xyXG4vLyB9KTtcclxuLy8gaGlkZVByaWNlQnRucy5mb3JFYWNoKChidG4sIGluZGV4KSA9PiB7XHJcbi8vICAgYnRuLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XHJcbi8vICAgICBjb25zdCBjYXJkcyA9IGNhcmRzQ29udGFpbmVyc1tpbmRleF0ucXVlcnlTZWxlY3RvckFsbChcIi5wcmljZS1saXN0X19ib2R5XCIpO1xyXG4vLyAgICAgZ3NhcC5mcm9tVG8oY2FyZHMsIHsgb3BhY2l0eTogMSB9LCB7IG9wYWNpdHk6IDAgfSk7XHJcbi8vICAgICBnc2FwLmZyb21UbyhcclxuLy8gICAgICAgY2FyZHNDb250YWluZXJzW2luZGV4XSxcclxuLy8gICAgICAgeyBkaXNwbGF5OiBcImZsZXhcIiB9LFxyXG4vLyAgICAgICB7IGRpc3BsYXk6IFwibm9uZVwiIH1cclxuLy8gICAgICk7XHJcbi8vICAgICBvcGVuUHJpY2VCdG5zW2luZGV4XS5zdHlsZS5kaXNwbGF5ID0gXCJmbGV4XCI7XHJcbi8vICAgICBoaWRlUHJpY2VCdG5zW2luZGV4XS5zdHlsZS5kaXNwbGF5ID0gXCJub25lXCI7XHJcbi8vICAgICBwcmljZVNlY3Rpb24uc2Nyb2xsSW50b1ZpZXcoe1xyXG4vLyAgICAgICBiZWhhdmlvcjogXCJzbW9vdGhcIixcclxuLy8gICAgIH0pO1xyXG4vLyAgIH0pO1xyXG4vLyB9KTtcclxuXHJcblxyXG4iXX0=
